BOM(브라우저 객체 모델)
	자바스크립트를 이용하면 브라우저의 정보에 접근하거나 브라우저의 여러 기능들을 제어할 수 있다.
	이 때 사용할 수 있는 객체 모델을 브라우저 객체 모델(BOM)이라고 한다.
	브라우저 객체 모델은 문서 객체 모델(DOM)과 달리 W3C의 표준 객체 모델은 아니다.
	하지만 자바스크립트가 브라우저의 기능적인 요소들을 직접 제어하고 관리할 수 있는 방법을 제공해준다.

window 객체
	웹 브라우저의 창(window)을 나타내는 객체로, 대부분의 웹 브라우저에서 지원한다.
	자바스크립트의 모든 객체, 전역함수, 전역변수들은 자동으로 window 객체의 프로퍼티가 된다.


location 객체
	location 객체는 현재 브라우저에 표시된 HTML 문서의 주소(URL)를 얻거나,
	브라우저에 새 문서를 불러올 때 사용할 수 있다.
	location 객체의 프로퍼티와 메소드를 이용하면, 
	현재 문서의 URL 주소를 다양하게 해석하여 처리할 수 있게 된다.

	- href: 페이지의 URL 전체 정보 반환, URL을 지정하여 페이지 이동도 가능.
	- pathname: URL 중 경로 부분의 정보를 반환한다.
	- port: 포트번호를 반환한다.
	- reload(): 새로 고침
	- assign(): 현재 URL을, 지정한 URL로 바꿔서 페이지 이동
	- replace(): 현재 URL을, 지정한 URL로 바꿔서 페이지 이동, 이전 페이지로 돌아갈 수 없게 한다.
========================================================================================
history 객체
	history 객체는 브라우저의 히스토리 정보를 문서와 문서상태 목록으로 저장하는 객체이다.

	- go(n): n번째 페이지로 이동(0부터 시작)
		1. n이 양수일 때 : 앞으로
		2. n이 음수일 때 : 뒤로
		3. n이 0일 때 : 새로 고침

	- back(): 뒤로 한 칸 이동
	- forward(): 앞으로 한 칸 이동
========================================================================================
jQuery
	요소들을 선택하는 강력한 방법을 사용하고 선택된 요소들을
	효율적으로 제어할 수 있는 자바스크립트 라이브러리이다.

jQuery 기본 문법
	$("선택자")

값 가져오기
	$("선택자").val(): 입력할 값을 가져올 때
	$("선택자").text(): 미리 작성된 값을 가져올 때

반복문
	$.each(iterator, function(index, item){});
	$.each(iterator, (index, item) => {});
	iterator.each(function(index, item){});
	iterator.each((index, item) => {});

jQuery를 사용하면, 순수 Javascript에 비해 속도가 느려진다.
하지만 간결한 문법으로 인해 개발 속도 증가와 처리비용 감소에 대한 장점이 있으며,
60% 이상의 웹 사이트에서 사용하고 있기 때문에 적절한 상황에 맞춰 사용할 줄 알아야 한다.
















